{"version":3,"sources":["components/MoviesPage/MoviesPage.module.css","components/MoviesPage/MoviesPage.js"],"names":["module","exports","MoviesPage","useState","query","setQuery","movies","setMovies","useRouteMatch","path","url","location","useLocation","history","useHistory","searchWord","URLSearchParams","search","get","useEffect","moviesAPI","then","results","className","s","form","action","onSubmit","e","preventDefault","trim","toast","error","push","input","type","value","onChange","target","placeholder","map","movie","to","pathname","id","state","from","moviesListItem","title"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,2B,gLCOV,SAASC,IAAc,IAAD,IACTC,mBAAS,IADA,mBAC5BC,EAD4B,KACrBC,EADqB,OAEPF,mBAAS,MAFF,mBAE5BG,EAF4B,KAEpBC,EAFoB,OAGbC,cAAdC,EAH2B,EAG3BA,KAAMC,EAHqB,EAGrBA,IACRC,EAAWC,cACXC,EAAUC,cACVC,EAAU,UACd,IAAIC,gBAAgBL,EAASM,QAAQC,IAAI,sBAD3B,QAC6C,GAM7DC,qBAAU,WACRJ,GACEK,IACkBL,GACfM,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBf,EAAUe,QACpC,CAACP,IAYJ,OACE,qCACE,uBAAMQ,UAAWC,IAAEC,KAAMC,OAAO,GAAGC,SAZtB,SAACC,GAEhB,GADAA,EAAEC,iBACmB,KAAjBzB,EAAM0B,OACR,OAAOC,IAAMC,MAAM,qIAErBnB,EAAQoB,KAAR,2BAAkBtB,GAAlB,IAA4BM,OAAO,eAAD,OAAiBb,MAEnDC,EAAS,KAKP,UACE,uBACEkB,UAAWC,IAAEU,MACbC,KAAK,OACLC,MAAOhC,EACPiC,SA5Bc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBjC,EAASiC,EAAOF,QA4BVG,YAAY,qBAEd,wBAAQJ,KAAK,SAAb,uBAGDpB,IAAeT,GAAU,cAAC,IAAD,IAEzBA,GACC,oBAAIiB,UAAU,aAAd,SACGjB,EAAOkC,KAAI,SAACC,GAAD,OACV,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKjC,EAAL,YAAY+B,EAAMG,IAC1BC,MAAO,CAAEC,KAAMnC,IAHnB,SAOE,oBAAIY,UAAWC,IAAEuB,eAAjB,SAAkCN,EAAMO,SAFnCP,EAAMG,SAQnB,cAAC,IAAD,CAAOnC,KAAI,UAAKA,EAAL,YAAX,SACE,cAAC,UAAD","file":"static/js/5.9c6bf776.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MoviesPage_form__3pf7M\"};","import { useState, useEffect } from \"react\";\nimport { Link, Route, useRouteMatch, useLocation, useHistory,} from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport * as moviesAPI from \"../../services/moviesAPI\";\nimport MovieDetailsPage from \"../MovieDetailsPage/MovieDetailsPage\";\nimport Loader from \"../Loader/Loader\";\nimport s from \"./MoviesPage.module.css\";\n\nexport default function MoviesPage() {\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState(null);\n  const { path, url } = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n  const searchWord =\n    new URLSearchParams(location.search).get(\"searchQuery\") ?? \"\";\n\n  const onInputChange = ({ target }) => {\n    setQuery(target.value);\n  };\n\n  useEffect(() => {\n    searchWord &&\n      moviesAPI\n        .fetchFindMovie(searchWord)\n        .then(({ results }) => setMovies(results));\n  }, [searchWord]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (query.trim() === \"\") {\n      return toast.error(\"Введите слово для поиска\");\n    }\n    history.push({ ...location, search: `searchQuery=${query}` });\n    // moviesAPI.fetchFindMovie(query).then(({ results }) => setMovies(results));\n    setQuery(\"\");\n  };\n\n  return (\n    <>\n      <form className={s.form} action=\"\" onSubmit={onSubmit}>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={query}\n          onChange={onInputChange}\n          placeholder=\"Search movies...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {searchWord && !movies && <Loader />}\n\n      {movies && (\n        <ul className=\"moviesList\">\n          {movies.map((movie) => (\n            <Link\n              to={{\n                pathname: `${url}/${movie.id}`,\n                state: { from: location },\n              }}\n              key={movie.id}\n            >\n              <li className={s.moviesListItem}>{movie.title}</li>\n            </Link>\n          ))}\n        </ul>\n      )}\n\n      <Route path={`${path}:movieId`}>\n        <MovieDetailsPage />\n      </Route>\n    </>\n  );\n}\n"],"sourceRoot":""}